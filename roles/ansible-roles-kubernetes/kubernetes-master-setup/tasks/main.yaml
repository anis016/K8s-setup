---

- name: "Check if Kubernetes has already been initialized"
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat


- name: "Initialize Kubernetes master with kubeadm init"
  command: >
    kubeadm init
    --pod-network-cidr={{ kubernetes_master_pod_network.cidr }}
    --apiserver-advertise-address={{ ansible_default_ipv4.address }}
    --ignore-preflight-errors={{ kubernetes_master_ignore_preflight_errors }}
  register: kubeadmin_init
  failed_when: false
  when: not kubernetes_init_stat.stat.exists


- name: "Print the 'kubeadm init' output to screen"
  debug:
    msg: "{{ kubeadmin_init.stdout }}"
  when: not kubernetes_init_stat.stat.exists


- name: "Ensure '$HOME/.kube' directory exists"
  file:
    path: $HOME/.kube
    state: directory


- name: "Symlink the /etc/kubernetes/admin.conf into $HOME/.kube/config"
  file:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    state: link


- name: "Configure Calico networking"
  command: "{{ item }}"
  with_items:
    - kubectl apply -f {{ kubernetes_master_calico_manifest_file }}
  register: calico_result
  changed_when: "'created' in calico_result.stdout"


- name: "Allow pods on master node (if configured)"
  command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
  when:
    - kubernetes_master_allow_pods_on_master | bool
    - not kubernetes_init_stat.stat.exists


- name: "Check if Kubernetes Dashboard UI service already exists"
  shell: kubectl get services --namespace kube-system | grep -q kubernetes-dashboard
  changed_when: false
  failed_when: false
  register: kubernetes_dashboard_service
  when: kubernetes_master_enable_web_ui | bool


- name: "Enable the Kubernetes Web Dashboard UI (if configured)"
  command: "kubectl create -f {{ kubernetes_web_ui_manifest_file }}"
  when:
    - kubernetes_master_enable_web_ui | bool
    - kubernetes_dashboard_service is failed